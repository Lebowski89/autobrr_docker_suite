---

################################
# CLEAN UP
################################

- name: Register thelounge container
  community.docker.docker_container_info:
    name: '{{ lookup("vars", role_prefix + "_thelounge_basics_name") }}'
  register: autobrr_thelounge_existing_container_result

- name: Remove existing thelounge container
  when: autobrr_thelounge_existing_container_result.exists
  community.docker.docker_container:
    container_default_behavior: compatibility
    name: '{{ lookup("vars", role_prefix + "_thelounge_basics_name") }}'
    state: absent
    stop_timeout: 10
  register: remove_autobrr_thelounge_docker
  retries: 5
  delay: 10
  until: remove_autobrr_thelounge_docker is succeeded

################################
# APPDATA
################################

- name: Create thelounge appdata directory
  ansible.builtin.file:
    path: '{{ lookup("vars", role_prefix + "_thelounge_paths_location") }}'
    state: directory
    owner: '{{ lookup("vars", role_prefix + "_thelounge_env_puid") }}'
    group: '{{ lookup("vars", role_prefix + "_thelounge_env_pgid") }}'
    mode: '0755'

- name: Create thelounge config directory
  ansible.builtin.file:
    path: '{{ lookup("vars", role_prefix + "_thelounge_paths_location") }}/config'
    state: directory
    owner: '{{ lookup("vars", role_prefix + "_thelounge_env_puid") }}'
    group: '{{ lookup("vars", role_prefix + "_thelounge_env_pgid") }}'
    mode: '0755'

################################
# CONTAINER
################################

- name: Create thelounge container
  when: not (lookup("vars", role_prefix + "_toggles_enable_traefik"))
  community.docker.docker_container:
    name: '{{ lookup("vars", role_prefix + "_thelounge_basics_name") }}'
    image: '{{ lookup("vars", role_prefix + "_thelounge_basics_image_repo") }}:{{ lookup("vars", role_prefix + "_thelounge_basics_image_tag") }}'
    networks: '{{ lookup("vars", role_prefix + "_thelounge_networks") }}'
    env:
      PUID: '{{ lookup("vars", role_prefix + "_thelounge_env_puid") }}'
      PGID: '{{ lookup("vars", role_prefix + "_thelounge_env_pgid") }}'
      TZ: '{{ lookup("vars", role_prefix + "_thelounge_env_timezone") }}'
    ports:
      - '{{ lookup("vars", role_prefix + "_thelounge_ports_host") }}:{{ lookup("vars", role_prefix + "_thelounge_ports_cont") }}'
    volumes: '{{ lookup("vars", role_prefix + "_thelounge_binds_config_mapping") }}'
    restart_policy: '{{ lookup("vars", role_prefix + "_thelounge_basics_restart_policy") }}'

- name: Create thelounge traefik container
  when: (lookup("vars", role_prefix + "_toggles_enable_traefik"))
  community.docker.docker_container:
    name: '{{ lookup("vars", role_prefix + "_thelounge_basics_name") }}'
    image: '{{ lookup("vars", role_prefix + "_thelounge_basics_image_repo") }}:{{ lookup("vars", role_prefix + "_thelounge_basics_image_tag") }}'
    networks: '{{ lookup("vars", role_prefix + "_thelounge_networks") }}'
    env:
      PUID: '{{ lookup("vars", role_prefix + "_thelounge_env_puid") }}'
      PGID: '{{ lookup("vars", role_prefix + "_thelounge_env_pgid") }}'
      TZ: '{{ lookup("vars", role_prefix + "_thelounge_env_timezone") }}'
    labels: '{{ lookup("vars", role_prefix + "_thelounge_labels") }}'
    ports:
      - '{{ lookup("vars", role_prefix + "_thelounge_ports_host") }}:{{ lookup("vars", role_prefix + "_thelounge_ports_cont") }}'
    volumes: '{{ lookup("vars", role_prefix + "_thelounge_binds_config_mapping") }}'
    restart_policy: '{{ lookup("vars", role_prefix + "_thelounge_basics_restart_policy") }}'